<script>
    var notyf = new Notyf();

    function showNotification(message, type) {
        switch(type) {
            case "success":
                notyf.success({
                    message,
                    dismissible: true,
                });
                break;
            case "error":
                notyf.error({
                    message,
                    dismissible: true,
                });
                break;
            default:
                notyf.success({
                    message,
                    dismissible: true,
                    icon: `<i class="bi bi-info-circle"></i>`,
                    background: "orange",
                });
                break;
        }
    }

    socket.on("notification", (obj) => {
        if(typeof(obj) == "string") {
            showNotification(obj, "success");
            return;
        }

        let message = obj.message;
        let type = obj.type;

        showNotification(message, type)
    })

    if(window.sessionStorage.getItem("reload_info")) {
            try {
                let obj = JSON.parse(window.sessionStorage.getItem("reload_info"));

                if(obj.message && obj.type)
                    showNotification(obj.message, obj.type);

            }catch {

            }
        }

    if(window.sessionStorage.getItem("reload_info"))
         window.sessionStorage.removeItem("reload_info");
</script>

<script>
    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
</script>